import com.yikuni.mc.reflect.annotation.YikuniCommand;
import com.yikuni.mc.reflect.loader.InterceptorLoader;
import org.junit.Test;

import java.nio.charset.StandardCharsets;

public class YikuniTest {
//    @Test
//    public void testBanner(){
//        byte[] bytes = {32, 32, 32, 95, 95, 95, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 95, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 95, 32, 32, 32, 32, 32, 32, 95, 32, 32, 95, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 13, 10, 32, 32, 124, 32, 95, 32, 92, 32, 32, 32, 32, 95, 95, 95, 32, 32, 32, 32, 95, 32, 95, 95, 32, 32, 32, 32, 32, 40, 95, 41, 32, 32, 32, 32, 32, 32, 95, 32, 95, 32, 32, 32, 32, 40, 95, 41, 32, 32, 32, 32, 124, 32, 124, 124, 32, 124, 32, 32, 95, 95, 32, 95, 32, 32, 32, 13, 10, 32, 32, 124, 32, 32, 32, 47, 32, 32, 32, 47, 32, 45, 95, 41, 32, 32, 124, 32, 39, 32, 32, 92, 32, 32, 32, 32, 124, 32, 124, 32, 32, 32, 32, 32, 124, 32, 39, 95, 124, 32, 32, 32, 124, 32, 124, 32, 32, 32, 32, 32, 92, 95, 44, 32, 124, 32, 47, 32, 95, 96, 32, 124, 32, 32, 13, 10, 32, 32, 124, 95, 124, 95, 92, 32, 32, 32, 92, 95, 95, 95, 124, 32, 32, 124, 95, 124, 95, 124, 95, 124, 32, 32, 95, 124, 95, 124, 95, 32, 32, 32, 95, 124, 95, 124, 95, 32, 32, 32, 95, 124, 95, 124, 95, 32, 32, 32, 95, 124, 95, 95, 47, 32, 32, 92, 95, 95, 44, 95, 124, 32, 32, 13, 10, 95, 124, 34, 34, 34, 34, 34, 124, 95, 124, 34, 34, 34, 34, 34, 124, 95, 124, 34, 34, 34, 34, 34, 124, 95, 124, 34, 34, 34, 34, 34, 124, 95, 124, 34, 34, 34, 34, 34, 124, 95, 124, 34, 34, 34, 34, 34, 124, 95, 124, 32, 34, 34, 34, 34, 124, 95, 124, 34, 34, 34, 34, 34, 124, 32, 13, 10, 34, 96, 45, 48, 45, 48, 45, 39, 34, 96, 45, 48, 45, 48, 45, 39, 34, 96, 45, 48, 45, 48, 45, 39, 34, 96, 45, 48, 45, 48, 45, 39, 34, 96, 45, 48, 45, 48, 45, 39, 34, 96, 45, 48, 45, 48, 45, 39, 34, 96, 45, 48, 45, 48, 45, 39, 34, 96, 45, 48, 45, 48, 45, 39, 32, 13, 10, 13, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
//        System.out.println(new String(bytes, StandardCharsets.UTF_8));
//    }
//    @Test
//    public void testInterceptor(){
//        InterceptorLoader loader = new InterceptorLoader();
//        System.out.println(loader == null);
//    }
}
